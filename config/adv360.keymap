/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&to>;
        };
    };

    combos {
        compatible = "zmk,combos";

        right-mb3 {
            bindings = <&mkp MB3>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE      &kp N1         &kp N2            &kp N3          &kp N4                &kp N5  &kp GRAVE                                                               &kp CAPS   &kp N6  &kp N7                 &kp N8           &kp N9             &kp N0            &kp K_LOCK
&kp TAB        &kp Q          &kp W             &kp E           &kp R                 &kp T   &kp DOUBLE_QUOTES                                                       &kp EQUAL  &kp Y   &kp U                  &kp I            &kp O              &kp P             &kp BSLH
&kp LCTRL      &kp A          &kp S             &kp D           &kp F                 &kp G   &kp SINGLE_QUOTE   &mkp LCLK  &mkp RCLK        &mkp MB2  &mkp MB1       &kp MINUS  &kp H   &kp J                  &kp K            &kp L              &kp SEMI          &kp RIGHT_CONTROL
&kp LSHFT      &kp Z          &kp X             &kp C           &kp V                 &kp B                                 &kp TAB          &mkp MB5                            &kp N   &kp M                  &kp COMMA        &kp DOT            &kp SLASH         &kp RSHFT
&kp LEFT_META  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS          &lt 2 ENTER        &kp SPACE  &kp LS(TAB)      &mkp MB4  &kp BACKSPACE  &lt 1 ESC          &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_META
            >;
        };

        keypad {
            bindings = <
&trans            &none      &none         &none   &none   &none          &none                                                 &none   &none           &none           &none         &none            &none  &none
&trans            &none      &kp N7        &kp N8  &kp N9  &kp EQUAL      &none                                                 &none   &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none  &kp BSLH
&kp LEFT_CONTROL  &kp COLON  &kp N4        &kp N5  &kp N6  &kp MINUS      &none       &tog 1     &kp LCTRL      &trans  &trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&kp LSHFT         &kp N0     &kp NUMBER_1  &kp N2  &kp N3  &kp BACKSLASH                         &trans         &trans                  &none           &none           &none         &none            &none  &kp RSHFT
&trans            &none      &trans        &trans  &trans                 &kp KP_DOT  &kp KP_N0  &kp LALT       &trans  &trans  &trans                  &trans          &trans        &trans           &none  &tog 3
            >;
        };

        navigation {
            bindings = <
&none  &none          &none         &none             &none           &none  &none                                   &none  &none           &none           &none         &none            &none  &none
&none  &none          &none         &none             &none           &none  &none                                   &none  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none  &none
&none  &kp LEFT_META  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none  &none  &none   &none      &none  &none  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&none  &none          &none         &none             &none           &none                 &none      &none                &none           &none           &none         &none            &none  &none
&mo 3  &none          &none         &none             &none                  &none  &trans  &none      &none  &none  &none                  &none           &none         &none            &none  &mo 3
            >;
        };

        layer_mod {
            bindings = <
&bootloader     &none         &none         &none         &none         &none         &bl BL_TOG                                    &bl BL_TOG  &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR_ALL  &none         &none         &none         &none         &none         &bl BL_INC                                    &bl BL_INC  &none         &none         &none         &none         &none         &bt BT_CLR_ALL
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bl BL_DEC  &none   &none      &none  &none   &bl BL_DEC  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none           &none         &none         &none         &none         &none                             &none      &none                      &none         &none         &none         &none         &none         &none
&trans          &bt BT_PRV    &none         &none         &out OUT_TOG                &none       &trans  &none      &none  &trans  &trans                    &out OUT_TOG  &none         &none         &bt BT_NXT    &trans
            >;
        };
    };
};
